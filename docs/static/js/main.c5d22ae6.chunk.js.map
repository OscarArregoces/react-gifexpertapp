{"version":3,"sources":["components/AddCategory.js","helpers/getGifGrid.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifGrid","category","a","url","encodeURI","fetch","resp","json","data","gifImg","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,sBAAMC,SAXO,SAACC,GACdA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEgCC,UAAUH,GAF1C,+DAGHI,MAAMF,GAHH,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KACFC,EAASD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAZU,kBAcfA,GAde,4CAAH,sDCFVS,EAAc,SAAC,GAAqB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKgB,UAAU,wCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,SCJJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAbAC,qBAAU,WAEN1B,EAAWC,GACN0B,MAAK,SAAAC,GACFZ,QAAQC,IAAIW,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDnBwBK,CAAc5B,GAAjCa,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAGpB,OACI,qCACI,mCAAMtB,KAELsB,GAAW,oBAAIJ,UAAU,0CAAd,kCAEZ,qBAAKA,UAAU,WAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBkB,EAAe,WAAO,IAAD,EAEE3C,mBAAS,CAAC,cAFZ,mBAEvBc,EAFuB,KAEbf,EAFa,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAEA,6BAEQe,EAASS,KAAI,SAAAT,GAAQ,OACjB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCVjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c5d22ae6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const changeValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={ onSubmit }>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ changeValue}\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: Proptypes.func.isRequired\r\n}\r\n\r\n\r\n// AddCategory.proptypes = {\r\n//     setCategory: Proptypes.func.isRequired\r\n// }","\r\n\r\n\r\n\r\nexport const getGifGrid = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UQzfhgR7YjhEMAJQvgqTwtyYml2dgUmh`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifImg = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifImg);\r\n    // console.log(images)\r\n    return gifImg;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__pulse\">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> {category}</h3>\r\n\r\n            {loading && <h4 className=\"animate__animated animate__fadeOutDown \">Cargando imagenes...</h4>}\r\n\r\n            <div className=\"car-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifGrid } from '../helpers/getGifGrid'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifGrid(category)\r\n            .then(imgs => {\r\n                console.log(imgs)\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [category, setCategory] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategory} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    category.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n// <>\r\n//     <AddCategory setCategory={setCategory} />\r\n//     <hr />\r\n\r\n//     <GifGrid category={category} />\r\n// </>","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExperApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}